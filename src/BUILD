package(default_visibility = ['//visibility:public'])

cc_library(
  name = "libick.a",
  linkstatic = 1,
  deps = [
    ":ick",
  ],
  alwayslink = 1,
)

cc_library(
  name = "ick",
  srcs = [
    "application.cc",
    "cmd_target.cc",
    "configure.cc",
    "connection.cc",
    "connection_pool.cc",
    "connection_pool_manager.cc",
    "control_object.cc",
    "converter.cc",
    "data_type.cc",
    "data_base.cc",
    "driver.cc",
    "file.cc",
    "grpc_remote_client.cc",
    "grpc_remote_service.cc",
    "http_callback.cc",
    "http_client.cc",
    "http_request.cc",
    "http_server.cc",
    "http_server_thread.cc",
    "ick_storm_data.cc",
    "ick_storm_service_socket.cc",
    "ick_storm_subscriber.cc",
    "ick_storm_subscriber_socket.cc",
    "ick_storm_subscriber_manager.cc",
    "ick_storm_debugger_socket.cc",
    "ick_service_impl.cc",
    "ick_storm_publisher.cc",
    "ick_storm_manager.cc",
    "int_value_info.cc",
    "logger.cc",
    "managed_object.cc",
    "message_entity.cc",
    "mysql_connection.cc",
    "mutex.cc",
    "object.cc",
    "object_manager.cc",
    "protocol.cc",
    "read_only_double.cc",
    "read_only_int.cc",
    "read_only_string.cc",
    "read_write_double.cc",
    "read_write_int.cc",
    "read_write_string.cc",
    "serial_port.cc",
    "service.cc",
    "service_info.cc",
    "service_param.cc",
    "socket.cc",
    "subscriber.cc",
    "thread.cc",
    "timer.cc",
    "time_converter.cc",
    "type_info.cc",
    "untyped_data.cc",
    "value_info.cc",
    "xml_parser.cc",
    "xml_parse_handler.cc",
  ],
  hdrs = [
    "access_mode.h",
    "application.h",
    "cmd_target.h",
    "configure.h",
    "connection.h",
    "connection_pool.h",
    "connection_pool_manager.h",
    "control_object.h",
    "converter.h",
    "data_type.h",
    "data_base.h",
    "driver.h",
    "file.h",
    "grpc_remote_client.h",
    "grpc_remote_service.h",
    "http_callback.h",
    "http_client.h",
    "http_request.h",
    "http_server.h",
    "http_server_thread.h",
    "ick_storm_data.h",
    "ick_storm_service_socket.h",
    "ick_storm_subscriber.h",
    "ick_storm_subscriber_socket.h",
    "ick_storm_subscriber_manager.h",
    "ick_storm_debugger_socket.h",
    "ick_service_impl.h",
    "ick_storm_publisher.h",
    "ick_storm_manager.h",
    "int_value_info.h",
    "logger.h",
    "managed_object.h",
    "message_entity.h",
    "mysql_connection.h",
    "mutex.h",
    "object.h",
    "object_manager.h",
    "protocol.h",
    "read_only_double.h",
    "read_only_int.h",
    "read_only_string.h",
    "read_write_double.h",
    "read_write_int.h",
    "read_write_string.h",
    "serial_port.h",
    "service.h",
    "service_info.h",
    "service_param.h",
    "socket.h",
    "subscriber.h",
    "thread.h",
    "timer.h",
    "time_converter.h",
    "type_info.h",
    "untyped_data.h",
    "value_info.h",
    "xml_parser.h",
    "xml_parse_handler.h",
  ],
  deps = [
    "//src/proto:grpc_lib",
    "//third_party/curl:libcurl",
    "//third_party/mysql_client_cpp:mysqlcppconn",
    "//third_party/xercesc:libxerces",
    "//third_party/libevent:libevent",
    "@com_github_gflags_gflags//:gflags",
    "@com_google_absl//absl/time:time",
    "@com_google_absl//absl/strings:strings",
  ],
)

cc_binary(
  name = "http_server_test",
  srcs = [
    "http_server_test.cc",
  ],
  deps = [
    ":ick",
  ]
)

cc_binary(
  name = "xml_parser_test",
  srcs = [
    "xml_parser_test.cc",
  ],
  deps = [
    ":ick",
  ]
)

cc_binary(
  name = "grpc_remote_client_main",
  srcs = [
    "grpc_remote_client_main.cc",
  ],
  deps = [
    ":ick",
  ],
)

